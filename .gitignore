### Copied, modified and published by Joseph W Donahue (DBA: SharperHacks), with permissions from:
###
### Copyright (c) 2014 GitHub, Inc. 
###
### Permission is hereby granted,  free of charge,  to any person obtaining a 
### copy of this software and associated documentation files (the "Software"), 
### to deal in the Software without restriction, including without limitation 
### the rights to  use, copy, modify, merge, publish, distribute, sublicense, 
### and/or sell copies of the Software, and to permit persons to whom the 
### Software is furnished to do so, subject to the following conditions: 
###
### 
###  The above copyright notice and this permission notice shall be included in 
###  all copies or substantial portions of the Software. 
###  
### 
###  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
###  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
###  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
###  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
###  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
###  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
###  DEALINGS IN THE SOFTWARE. 

# SharperHacks specific files
.[Bb]in/
.[Ll]ogs/
*.[Ss]ave

## Ignore Visual Studio temporary files, build results, and 
## files generated by popular Visual Studio add-ons. 

# Visual Studio User-specific files 
*.suo 
*.*.suo
*.user 
*.userosscache 
*.sln.docstates 

# Visual Studio User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Visual Studio Build results 
[Dd]ebug/
[Dd]ebugPublic/ 
[Rr]elease/ 
[Rr]eleases/ 
x64/ 
x86/ 
[Bb]uild/ 
bld/ 
[Bb]in/ 
[Oo]bj/ 
[Ll]og/

# Visual Studio 2015 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Roslyn cache directories 
*.ide/ 

# MSTest test Results 
[Tt]est[Rr]esult*/ 
[Bb]uild[Ll]og.* 

# NUNIT 
*.VisualState.xml 
TestResult.xml 

# Build Results of an ATL Project 
[Dd]ebugPS/ 
[Rr]eleasePS/ 
dlldata.c 

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/
**/Properties/launchSettings.json

*_i.c
*_p.c
*_i.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files 
_Chutzpah* 

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# TFS 2012 Local Workspace 
$tf/ 

# Guidance Automation Toolkit 
*.gpState 

# ReSharper is a .NET coding add-in 
_ReSharper*/ 
*.[Rr]e[Ss]harper 
*.DotSettings.user 
CoverageReport.html
CoverageReport/

# JustCode is a .NET coding addin-in 
.JustCode 

# TeamCity is a build add-in 
_TeamCity* 

# DotCover is a Code Coverage Tool 
*.dotCover 

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose 
*.mm.* 
AutoTest.Net/ 

# Web workbench (sass) 
.sass-cache/ 

# Installshield output folder 
[Ee]xpress/ 

# DocProject is a documentation generator add-in 
DocProject/buildhelp/ 
DocProject/Help/*.HxT 
DocProject/Help/*.HxC 
DocProject/Help/*.hhc 
DocProject/Help/*.hhk 
DocProject/Help/*.hhp 
DocProject/Help/Html2 
DocProject/Help/html 

# Click-Once directory 
publish/ 

# Publish Web Output 
*.[Pp]ublish.xml 
*.azurePubxml 
# TODO: Comment the next line if you want to checkin your web deploy settings  
# but database connection strings (with potential passwords) will be unencrypted 
*.pubxml 
*.publishproj 

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Windows Azure Build Output 
csx/ 
*.build.csdef 

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt

# Others 
*.Cache 
ClientBin/ 
[Ss]tyle[Cc]op.* 
~$* 
*~ 
*.dbmdl 
*.dbproj.schemaview 
*.pfx
*[Kk]ey.pfx
*.publishsettings
orleans.codegen.cs 
node_modules/ 
bower_components/ 

# RIA/Silverlight projects 
Generated_Code/ 

# Backup & report files from converting an old project file 
# to a newer Visual Studio version. Backup files are not needed, 
# because we have git ;-) 
_UpgradeReport_Files/ 
Backup*/ 
UpgradeLog*.XML 
UpgradeLog*.htm 

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects 
*.rdl.data 
*.bim.layout 
*.bim_*.settings 

# Microsoft Fakes 
FakesAssemblies/ 

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Typescript v1 declaration files
typings/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# JetBrains Rider
.idea/
*.sln.iml

# CodeRush
.cr/

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# SlickEdit workspace, project, history and tag files
*.vpj
*.vpw
*.vpwhist
*.vtg

# It's better to unpack these files and commit the raw source because
# git has its own built in compression methods.
*.7z
*.jar
*.rar
*.zip
*.gz
*.gzip
*.tgz
*.bzip
*.bzip2
*.bz2
*.xz
*.lzma
*.cab
*.xar

# Packing-only formats
*.iso
*.tar

# Package management formats
*.dmg
*.xpi
*.gem
*.egg
*.deb
*.rpm
*.msi
*.msm
*.msp
*.txz
